{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/coding.lessons/2021.10.22 - MENTORING/netflix-baby-yoda/src/pages/TvShow/TvShow.js\",\n    _s = $RefreshSig$();\n\nimport \"./TvShow.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport tvShowsArray from \"../../api/tvShows\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TvShow() {\n  _s();\n\n  var _tvShowObject$seasons, _tvShowSeason$episode;\n\n  const {\n    tvShowId\n  } = useParams();\n  const [tvShowObject, setTvShowObject] = useState({});\n  const [tvShowSeason, setTvShowSeason] = useState({});\n  useEffect(() => {\n    const getTvShow = tvShowsArray.find(el => el.id === tvShowId);\n    setTvShowObject(getTvShow);\n    setTvShowSeason(getTvShow.seasons[0]);\n  }, [tvShowId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: tvShowObject === null || tvShowObject === void 0 ? void 0 : tvShowObject.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TvShow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Seasons\",\n        children: tvShowObject === null || tvShowObject === void 0 ? void 0 : (_tvShowObject$seasons = tvShowObject.seasons) === null || _tvShowObject$seasons === void 0 ? void 0 : _tvShowObject$seasons.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Season\",\n          onClick: () => setTvShowSeason(el),\n          children: el.title\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Episodes\",\n          children: tvShowSeason === null || tvShowSeason === void 0 ? void 0 : (_tvShowSeason$episode = tvShowSeason.episodes) === null || _tvShowSeason$episode === void 0 ? void 0 : _tvShowSeason$episode.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Episode\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: \"EpisodeImage\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: el.image,\n                alt: \"\",\n                width: 100,\n                onClick: () => {\n                  window.open(el.video, \"_blank\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: el.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TvShow, \"P+isLlvTQ8MaihNucoimdIUz5MM=\", false, function () {\n  return [useParams];\n});\n\n_c = TvShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvShow\");","map":{"version":3,"sources":["/home/user/Desktop/coding.lessons/2021.10.22 - MENTORING/netflix-baby-yoda/src/pages/TvShow/TvShow.js"],"names":["React","useEffect","useState","useParams","tvShowsArray","TvShow","tvShowId","tvShowObject","setTvShowObject","tvShowSeason","setTvShowSeason","getTvShow","find","el","id","seasons","title","map","episodes","image","window","open","video"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAeH,SAAS,EAA9B;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAGP,YAAY,CAACQ,IAAb,CAAmBC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUR,QAApC,CAAlB;AACAE,IAAAA,eAAe,CAACG,SAAD,CAAf;AACAD,IAAAA,eAAe,CAACC,SAAS,CAACI,OAAV,CAAkB,CAAlB,CAAD,CAAf;AAGD,GANQ,EAMN,CAACT,QAAD,CANM,CAAT;AAYA,sBACE;AAAA,4BAEE;AAAA,gBAAKC,YAAL,aAAKA,YAAL,uBAAKA,YAAY,CAAES;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGT,YADH,aACGA,YADH,gDACGA,YAAY,CAAEQ,OADjB,0DACG,sBAAuBE,GAAvB,CAA4BJ,EAAD,iBAC1B;AAAiB,UAAA,SAAS,EAAC,QAA3B;AAAoC,UAAA,OAAO,EAAE,MAAMH,eAAe,CAACG,EAAD,CAAlE;AAAA,oBAA0EA,EAAE,CAACG;AAA7E,WAAUH,EAAE,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBACGL,YADH,aACGA,YADH,gDACGA,YAAY,CAAES,QADjB,0DACG,sBAAwBD,GAAxB,CAA6BJ,EAAD,iBAC3B;AAAiB,YAAA,SAAS,EAAC,SAA3B;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,qCACA;AAAM,gBAAA,GAAG,EAAEA,EAAE,CAACM,KAAd;AAAqB,gBAAA,GAAG,EAAC,EAAzB;AAA4B,gBAAA,KAAK,EAAE,GAAnC;AACA,gBAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,MAAM,CAACC,IAAP,CAAYR,EAAE,CAACS,KAAf,EAAsB,QAAtB;AACD;AAHD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAA,wBAAOT,EAAE,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA,aAAUH,EAAE,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAnDuBT,M;UACDF,S;;;KADCE,M","sourcesContent":["import \"./TvShow.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport tvShowsArray from \"../../api/tvShows\";\nexport default function TvShow() {\n  const { tvShowId } = useParams()\n  const [tvShowObject, setTvShowObject] = useState({});\n  const [tvShowSeason, setTvShowSeason] = useState({});\n\n  useEffect(() => {\n    const getTvShow = tvShowsArray.find((el) => el.id === tvShowId);\n    setTvShowObject(getTvShow);\n    setTvShowSeason(getTvShow.seasons[0]);\n\n\n  }, [tvShowId]);\n\n\n\n\n\n  return (\n    <div>\n\n      <h1>{tvShowObject?.title}</h1>\n\n      <div className=\"TvShow\" >\n        <div className=\"Seasons\" >\n          {tvShowObject?.seasons?.map((el) => (\n            <div key={el.id} className=\"Season\" onClick={() => setTvShowSeason(el)} >{el.title}</div>\n          ))}\n        </div>\n\n        <div>\n          <div className=\"Episodes\" >\n            {tvShowSeason?.episodes?.map((el) => (\n              <div key={el.id} className=\"Episode\" >\n                <Link className=\"EpisodeImage\">\n                <img  src={el.image} alt=\"\" width={100}\n                onClick={() => {\n                  window.open(el.video, \"_blank\");\n                }}\n                />\n                </Link>\n                <span>{el.title}</span>\n              </div>\n\n\n            ))}\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}