{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/coding.lessons/2021.10.22 - MENTORING/netflix-baby-yoda/src/pages/TvShowEpisode/TvShowEpisode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './TvShowEpisode.css';\nimport { useParams } from 'react-router-dom';\nimport tvShowsData from '../../api/tvShows';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TvShowEpisode() {\n  _s();\n\n  const {\n    tvShowId,\n    seasonId,\n    episodeId\n  } = useParams();\n  const [tvShow, setTvShow] = useState();\n  const [season, setSeason] = useState();\n  const [episode, setEpisode] = useState();\n  useEffect(() => {\n    const getTvShow = tvShowsData.find(el => el.id === tvShowId);\n    setTvShow(getTvShow);\n    const getSeason = getTvShow.seasons.find(el => el.id === seasonId);\n    setSeason(getSeason);\n    const getEpisode = getSeason.episodes.find(el => el.id === episodeId);\n    setEpisode(getEpisode);\n  }, [tvShowId, seasonId, episodeId]);\n  console.log('====================================');\n  console.log(tvShow);\n  console.log(season);\n  console.log(episode);\n  console.log('====================================');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TV SHOWS EPISODE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(TvShowEpisode, \"ceV7pZEfqGDnXGjyOMLYGrTo9Fo=\", false, function () {\n  return [useParams];\n});\n\n_c = TvShowEpisode;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvShowEpisode\");","map":{"version":3,"sources":["/home/user/Desktop/coding.lessons/2021.10.22 - MENTORING/netflix-baby-yoda/src/pages/TvShowEpisode/TvShowEpisode.js"],"names":["React","useState","useEffect","useParams","tvShowsData","TvShowEpisode","tvShowId","seasonId","episodeId","tvShow","setTvShow","season","setSeason","episode","setEpisode","getTvShow","find","el","id","getSeason","seasons","getEpisode","episodes","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,qBAAP;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAkCL,SAAS,EAAjD;AAEA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,EAApC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,EAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMa,SAAS,GAAGX,WAAW,CAACY,IAAZ,CAAkBC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUZ,QAAnC,CAAlB;AACAI,IAAAA,SAAS,CAACK,SAAD,CAAT;AACA,UAAMI,SAAS,GAAGJ,SAAS,CAACK,OAAV,CAAkBJ,IAAlB,CAAwBC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUX,QAAzC,CAAlB;AACAK,IAAAA,SAAS,CAACO,SAAD,CAAT;AACA,UAAME,UAAU,GAAGF,SAAS,CAACG,QAAV,CAAmBN,IAAnB,CAAyBC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUV,SAA1C,CAAnB;AACAM,IAAAA,UAAU,CAACO,UAAD,CAAV;AAEC,GARQ,EAQN,CAACf,QAAD,EAAWC,QAAX,EAAqBC,SAArB,CARM,CAAT;AAWAe,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AAGA,sBACJ;AAAA,2BAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR,mBADI;AAUH;;GAnCuBnB,a;UACoBF,S;;;KADpBE,a","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './TvShowEpisode.css'\nimport { useParams } from 'react-router-dom'\nimport tvShowsData from '../../api/tvShows'\n\nexport default function TvShowEpisode() {\n    const {tvShowId, seasonId, episodeId} = useParams() \n\n    const [tvShow, setTvShow] = useState()\n    const [season, setSeason] = useState()\n    const [episode, setEpisode] = useState()\n\n    useEffect(() => {\n    const getTvShow = tvShowsData.find((el) => el.id === tvShowId)\n    setTvShow(getTvShow)\n    const getSeason = getTvShow.seasons.find((el) => el.id === seasonId)\n    setSeason(getSeason)\n    const getEpisode = getSeason.episodes.find((el) => el.id === episodeId)\n    setEpisode(getEpisode)\n\n    }, [tvShowId, seasonId, episodeId])\n\n\n    console.log('====================================');\n    console.log(tvShow);\n    console.log(season);\n    console.log(episode);\n    console.log('====================================');\n\n\n    return (\n<>\n\n        <h1>TV SHOWS EPISODE</h1>\n        \n\n\n  </>      \n    )\n        \n}\n"]},"metadata":{},"sourceType":"module"}